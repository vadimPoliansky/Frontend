@using IndInv.Helpers
@using IndInv.Models
@using System.Globalization
<script src="../../Scripts/jquery-1.11.0.min.js"></script>
<script src="../../Scripts/jquery.handsontable.full.js"></script>
<script type='text/javascript' src="http://wurfljs.com/wurfl.js"></script>
<link rel="stylesheet" media="screen" href="../../Scripts/jquery.handsontable.full.css" />
@model IList<IndInv.Models.ViewModels.AnalystViewModel>
@using IndInv.Models
@{
    ViewBag.Title = "Edit Analysts";
}

<br />
<div class="row">
    <div class="large-8 columns">
        <div id="dataTable"></div>
    </div>
</div>
<script type="text/javascript">

    var maxed = false
        , resizeTimeout
        , availableWidth
        , availableHeight
        , $window = $(window)
        , $example1 = $('#dataTable');

    var calculateSize = function () {
        var offset = $example1.offset();
        availableWidth = $window.width() - offset.left + $window.scrollLeft();
        availableHeight = $window.height() - offset.top + $window.scrollTop();
    };
    $window.on('resize', calculateSize);

    var values = @Html.Raw(Json.Encode(Model));
    
    $example1 .handsontable({
        data: values,
        startRows: 1,
        startCols: 1,
        rowHeaders: true,
        colHeaders: true,
        strechH: 'all',
        strechW: 'all',
        scrollH: 'auto',
        scrollV: 'auto',
        width: function () {
            if (maxed && availableWidth === void 0) {
                calculateSize();
            }
            return maxed  ?  availableWidth *0.98 : 300;
        },
        height: function () {
            if (maxed && availableHeight === void 0) {
                calculateSize();
            }
        return maxed  ?  availableHeight*0.98: 300;
        },
        fixedRowsTop: 0,
        fixedColumnsLeft: 1,
        manualColumnResize: true,
        minSpareRows: 0,
        contextMenu: true,
        colHeaders: [
            "Last_Name",
            "First_Name",
            "Position",
        ],
        columns: [
            {data:"Last_Name"},
            {data:"First_Name"},
            {data:"Position"},
        ],
        afterChange: function (change, source) {
            if (source === 'loadData') {
                return;
            } else {
                for (var i = 0; i< change.length; ++i){
                    if (change[i][1] != "Analyst_ID"){
                        updateAnalyst(change, i);
                    }
                }
            }
        },
        beforeRemoveRow: function(index, amount){
            var analystID =  this.getDataAtRowProp(index, 'Analyst_ID')
            deleteAnalyst(analystID);
        }
    });

    maxed = !maxed;
    $example1.handsontable('render');

    function updateAnalyst(change, i){
        var changedRow = change[i][0];
        var changedParameter = change[i][1];
        var changedValue = change[i][3];
        $.get('@Url.Action("/editAnalysts")', {Analyst_ID_Filter : $example1.handsontable('getDataAtCell', changedRow,'Analyst_ID')}, function (data) {
            var newValue = data;
            $example1.handsontable('setDataAtRowProp', changedRow,'Analyst_ID', data[0].Analyst_ID)
            var parameters = []
            parameters.push({
                First_Name: (changedParameter=="First_Name" ?  changedValue : newValue[0].First_Name),
                Last_Name: (changedParameter=="Last_Name" ?  changedValue : newValue[0].Last_Name),
                Analyst_ID: (changedParameter=="Analyst_ID" ?  changedValue : newValue[0].Analyst_ID),
                Position: (changedParameter=="Position" ?  changedValue : newValue[0].Position),
            })
            $.ajax({
                url: this.action,
                type: 'POST',
                data: JSON.stringify(parameters),
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                },
                error: function (request){
                }
            });
        });
    }

    function deleteAnalyst(analystID){
        var parameters = {analystID: analystID};
        $.ajax({
            url:'@Url.Action("/deleteAnalyst")',
            type: 'POST',
            data: JSON.stringify(parameters),
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
            },
            error: function (request){
            }
        });
    }

</script>
 