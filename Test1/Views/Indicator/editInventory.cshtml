@using IndInv.Helpers
@using IndInv.Models
@using System.Globalization
<script src="../../Scripts/jquery-1.11.0.min.js"></script>
<script src="../../Scripts/jquery.handsontable.full.js"></script>
<script type='text/javascript' src="http://wurfljs.com/wurfl.js"></script>
<link rel="stylesheet" media="screen" href="../../Scripts/jquery.handsontable.full.css" />
@model IList<IndInv.Models.ViewModels.InventoryViewModel>
@using IndInv.Models
@{
    ViewBag.Title = "Edit Inventory Table";
    ViewBag.Buttons = "";
    foreach (var analyst in Model.FirstOrDefault().allAnalysts)
    {
        ViewBag.Buttons += "<div id='btn' class='btnSwitch' value=" + analyst.Analyst_ID + " parameter=analystID >" + analyst.First_Name + "</div>";
    }
    ViewBag.Buttons += "<div id='btn' class='btnSwitch' value=" + 0 + " parameter=analystID >" + "All" + "</div>";
    ViewBag.Buttons += "<br/>";
    ViewBag.Buttons += "<div class='btn' id=showValue>Values</div>";
    ViewBag.Buttons += "<div class='btn' id=showTarget>Target</div>";
    ViewBag.Buttons += "<div class='btn' id=showDefinition>Definitions</div>";
    ViewBag.Buttons += "<div class='btn' id=showColor>Colors</div>";
    ViewBag.Buttons += "<div class='btn' id=showAll>All</div>";

    var fiscalYear = Model.FirstOrDefault().Fiscal_Year;

    ViewBag.fiscalYear = fiscalYear;
}
<div class="row">
<label>Search<input id="searchgrid" type="text" /></label>
</div>

<style>.rowLong {padding-left:40px;}</style>

<div class="rowLong">
    <div id="dataTable">
</div>

<script type="text/javascript">

    $(document).on('input', '#mytxtBox', function () {
        console.log($('#mytxtBox').val());
    });

    function qcolor(instance, td, row, col, prop, value, cellProperties) {
        switch(prop){
            case "FY_Q1": quarter = "Q1_Color"; break;
            case "FY_Q2": quarter = "Q2_Color"; break;
            case "FY_Q3": quarter = "Q3_Color"; break;
            case "FY_Q4": quarter = "Q4_Color"; break;
            case "FY_YTD": quarter = "YTD_Color"; break;
        }
        changedProp = $IndInv.handsontable("getDataAtRowProp",row, quarter)
        Handsontable.renderers.TextRenderer.apply(this, arguments);
        if (changedProp == "cssGreen"){
            td.style.background = 'green';
            td.style.color = 'white';
        }
        if (changedProp == "cssYellow"){
            td.style.background = 'yellow';
            td.style.color = 'black';
        }
        if (changedProp == "cssRed"){
            td.style.background = 'red';
            td.style.color = 'white';
        }
    }

    Handsontable.renderers.registerRenderer('qcolor', qcolor);

    var maxed = false
        , resizeTimeout
        , availableWidth
        , availableHeight
        , $window = $(window)
        , $IndInv = $('#dataTable');

    var calculateSize = function () {
        var offset = $IndInv.offset();
        availableWidth = $window.width() - offset.left + $window.scrollLeft();
        availableHeight = $window.height() - offset.top + $window.scrollTop();
    };
    $window.on('resize', calculateSize);

    var values = @Html.Raw(Json.Encode(Model));
    
    $IndInv .handsontable({
        clickBeginsEditing : WURFL.is_mobile? true:false,
        data: values,
        startRows: 1,
        startCols: 1,
        colHeaders: true,
        strechH: 'all',
        strechW: 'all',
        scrollH: 'auto',
        scrollV: 'auto',
        colWidths: [50, 250, 150, 100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,500,500,500,100,100,100,100,100,100,100], 
        width: function () {
            if (maxed && availableWidth === void 0) {
                calculateSize();
            }
            return maxed  ?  availableWidth *0.98 : 300;
        },
        height: function () {
            if (maxed && availableHeight === void 0) {
                calculateSize();
            }
            return maxed  ?  availableHeight*0.95: 300;
        },
        fixedRowsTop: 0,
        fixedColumnsLeft: 2,
        manualColumnResize: true,
        minSpareRows: 0,
        contextMenu: true,
        rowHeaders: false,
        colHeaders: [
            "ID",
            "Indicator",
            "CoE",
            "@FiscalYear.FYStrFull("FY_3",fiscalYear)",
            "Sup",
            "@FiscalYear.FYStrFull("FY_2",fiscalYear)",
            "Sup",
            "@FiscalYear.FYStrFull("FY_1",fiscalYear)",
            "Sup",
            "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q1",
            "Sup",
            "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q2",
            "Sup",
            "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q3",
            "Sup",
            "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q4",
            "Sup",
            "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_YTD",
            "Sup",
            "Target",
            "Sup",
            "Comparator",
            "Sup",
            "Performance_Threshold",
            "Sup",
            "color_ID",
            "Custom_YTD",
            "Custom_Q1",
            "Custom_Q2",
            "Custom_Q3",
            "Custom_Q4",
            "Definition_Calculation",
            "Target_Rationale",
            "Comparator_Source",
            "Data_Source_MSH",
            "Data_Source_Benchmark",
            "OPEO_Lead"
        ],
        columns: [
            {data:"Indicator_ID"},
            {data:"Indicator"},
            {data:"CoE"},
            {data:"FY_3"},
            {data:"FY_3_Sup"},
            {data:"FY_2"},
            {data:"FY_2_Sup"},
            {data:"FY_1"},
            {data:"FY_1_Sup"},
            {data:"FY_Q1", renderer:"qcolor"},
            {data:"FY_Q1_Sup"},
            {data:"FY_Q2", renderer:"qcolor"},
            {data:"FY_Q2_Sup"},
            {data:"FY_Q3", renderer:"qcolor"},
            {data:"FY_Q3_Sup"},
            {data:"FY_Q4", renderer:"qcolor"},
            {data:"FY_Q4_Sup"},
            {data:"FY_YTD", renderer:"qcolor"},
            {data:"FY_YTD_Sup"},
            {data:"Target"},
            {data:"Target_Sup"},
            {data:"Comparator"},
            {data:"Comparator_Sup"},
            {data:"Performance_Threshold"},
            {data:"Performance_Threshold_Sup"},
            {data:"color_ID"},
            {data:"Custom_YTD"},
            {data:"Custom_Q1"},
            {data:"Custom_Q2"},
            {data:"Custom_Q3"},
            {data:"Custom_Q4"},
            {data:"Definition_Calculation"},
            {data:"Target_Rationale"},
            {data:"Comparator_Source"},
            {data:"Data_Source_MSH"},
            {data:"Data_Source_Benchmark"},
            {data:"OPEO_Lead"}
        ],
        afterChange: function (change, source) {
            if (source === 'loadData') {
                return;
            } else {
                for (var i = 0; i< change.length; ++i){
                    updateIndicator(change, i);
                }
            }
        }
    });

    maxed = !maxed;
    $IndInv.handsontable('render');

    function updateIndicator(change, i){
        var changedRow = change[i][0]
        var changedParameter = change[i][1];
        var changedValue = change[i][3];
        if (changedParameter != "Q1_Color" && changedParameter != "Q2_Color" && changedParameter != "Q3_Color" && changedParameter != "Q4_Color" && changedParameter != "YTD_Color"){
            var parameters = {
                indicatorID: $IndInv.handsontable('getDataAtCell',change[i][0],0),
                updateProperty: changedParameter,
                updateValue: changedValue,
                fiscalYear: @Model.FirstOrDefault().Fiscal_Year,
            };
            $.ajax({
                url: this.action,
                type: 'POST',
                data: JSON.stringify(parameters),
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    $.get('@Url.Action("/editInventory")', {indicatorID : $IndInv.handsontable('getDataAtCell',change[i][0],0), fiscalYear: @Model.FirstOrDefault().Fiscal_Year}, function (data) {
                        $IndInv.handsontable("setDataAtRowProp", changedRow, "Q1_Color", data[0].Q1_Color);
                        $IndInv.handsontable("setDataAtRowProp", changedRow, "Q2_Color", data[0].Q2_Color);
                        $IndInv.handsontable("setDataAtRowProp", changedRow, "Q3_Color", data[0].Q3_Color);
                        $IndInv.handsontable("setDataAtRowProp", changedRow, "Q4_Color", data[0].Q4_Color);
                        $IndInv.handsontable("setDataAtRowProp", changedRow, "YTD_Color", data[0].YTD_Color);
                    });
                },
                error: function (request){
                }
            });
        }
    }

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#searchgrid').on('keyup', function (event) {
            var value = ('' + this.value).toLowerCase(), row, col, r_len, c_len, td;
            var example = $IndInv
            var datasrch = jQuery.makeArray(values);
            var searcharray = [];
            if (value) {
                for (row = 0, r_len = datasrch.length; row < r_len; row++) {
                    jQuery.each(datasrch[row], function (name, currValue) {
                        if(('' + currValue).toLowerCase().indexOf(value) > -1){
                            searcharray.push(datasrch[row]);
                            return false;
                        }
                    });
                }
                example.handsontable('loadData', searcharray);
            }
            else {
                example.handsontable('loadData', values);
            }
        });

        var table = $IndInv.handsontable('getInstance');

        $('#showValue').on('click', function () {
            table.updateSettings({
                colWidths: [50, 250, 150, 100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,500,500,500,100,100,100,100,100,100,100], 
                colHeaders: [
                    "ID",
                    "Indicator",
                    "CoE",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q1",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q2",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q3",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q4",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_YTD",
                    "Sup",
                ],
                columns: [
                    {data:"Indicator_ID"},
                    {data:"Indicator"},
                    {data:"CoE"},

                    {data:"FY_Q1", renderer:"qcolor"},
                    {data:"FY_Q1_Sup"},
                    {data:"FY_Q2", renderer:"qcolor"},
                    {data:"FY_Q2_Sup"},
                    {data:"FY_Q3", renderer:"qcolor"},
                    {data:"FY_Q3_Sup"},
                    {data:"FY_Q4", renderer:"qcolor"},
                    {data:"FY_Q4_Sup"},
                    {data:"FY_YTD", renderer:"qcolor"},
                    {data:"FY_YTD_Sup"},
                ],
            });
        });

        $('#showTarget').on('click', function () {
            table.updateSettings({
                colWidths: [50, 250, 150, 100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,500,500,500,100,100,100,100,100,100,100], 
                colHeaders: [
                    "ID",
                    "Indicator",
                    "CoE",
                    "Target",
                    "Sup",
                    "Comparator",
                    "Sup",
                    "Performance_Threshold",
                    "Sup",
                ],
                columns: [
                    {data:"Indicator_ID"},
                    {data:"Indicator"},
                    {data:"CoE"},
                    {data:"Target"},
                    {data:"Target_Sup"},
                    {data:"Comparator"},
                    {data:"Comparator_Sup"},
                    {data:"Performance_Threshold"},
                    {data:"Performance_Threshold_Sup"},
                ],
            });
        });

        $('#showDefinition').on('click', function () {
            table.updateSettings({
                colWidths: [50, 250, 150, 500,500,500,100,100,100,100,100,100,100],
                colHeaders: [
                    "ID",
                    "Indicator",
                    "CoE",
                    "Definition_Calculation",
                    "Target_Rationale",
                    "Comparator_Source",
                    "Data_Source_MSH",
                    "Data_Source_Benchmark",
                    "OPEO_Lead"
                ],
                columns: [
                    {data:"Indicator_ID"},
                    {data:"Indicator"},
                    {data:"CoE"},
                    {data:"Definition_Calculation"},
                    {data:"Target_Rationale"},
                    {data:"Comparator_Source"},
                    {data:"Data_Source_MSH"},
                    {data:"Data_Source_Benchmark"},
                    {data:"OPEO_Lead"}
                ],
            });
        });

        $('#showColor').on('click', function () {
            table.updateSettings({
                strechH: 'last',
                colWidths: [50, 250, 150, 100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,500,500,500,100,100,100,100,100,100,100], 
                colHeaders: [
                    "ID",
                    "Indicator",
                    "CoE",
                    "Color_ID",
                    "Custom_YTD",
                    "Custom_Q1",
                    "Custom_Q2",
                    "Custom_Q3",
                    "Custom_Q4",
                ],
                columns: [
                    {data:"Indicator_ID"},
                    {data:"Indicator"},
                    {data:"CoE"},
                    {data:"Color_ID"},
                    {data:"Custom_YTD"},
                    {data:"Custom_Q1"},
                    {data:"Custom_Q2"},
                    {data:"Custom_Q3"},
                    {data:"Custom_Q4"},
                ],
            });
        });

        $('#showAll').on('click', function () {
            table.updateSettings({
                colWidths: [50, 250, 150, 100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,500,500,500,100,100,100,100,100,100,100], 
                colHeaders: [
                    "ID",
                    "Indicator",
                    "CoE",
                    "@FiscalYear.FYStrFull("FY_3",fiscalYear)",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_2",fiscalYear)",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_1",fiscalYear)",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q1",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q2",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q3",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_Q4",
                    "Sup",
                    "@FiscalYear.FYStrFull("FY_",fiscalYear)" + "_YTD",
                    "Sup",
                    "Target",
                    "Target_Sup",
                    "Comparator",
                    "Comparator_Sup",
                    "Performance_Threshold",
                    "Performance_Threshold_Sup",
                    "color_ID",
                    "Custom_YTD",
                    "Custom_Q1",
                    "Custom_Q2",
                    "Custom_Q3",
                    "Custom_Q4",
                    "Definition_Calculation",
                    "Target_Rationale",
                    "Comparator_Source",
                    "Data_Source_MSH",
                    "Data_Source_Benchmark",
                    "OPEO_Lead"
                ],
                columns: [
                    {data:"Indicator_ID"},
                    {data:"Indicator"},
                    {data:"CoE"},
                    {data:"FY_3"},
                    {data:"FY_3_Sup"},
                    {data:"FY_2"},
                    {data:"FY_2_Sup"},
                    {data:"FY_1"},
                    {data:"FY_1_Sup"},
                    {data:"FY_Q1", renderer:"qcolor"},
                    {data:"FY_Q1_Sup"},
                    {data:"FY_Q2", renderer:"qcolor"},
                    {data:"FY_Q2_Sup"},
                    {data:"FY_Q3", renderer:"qcolor"},
                    {data:"FY_Q3_Sup"},
                    {data:"FY_Q4", renderer:"qcolor"},
                    {data:"FY_Q4_Sup"},
                    {data:"FY_YTD", renderer:"qcolor"},
                    {data:"FY_YTD_Sup"},
                    {data:"Target"},
                    {data:"Target_Sup"},
                    {data:"Comparator"},
                    {data:"Comparator_Sup"},
                    {data:"Performance_Threshold"},
                    {data:"Performance_Threshold_Sup"},
                    {data:"color_ID"},
                    {data:"Custom_YTD"},
                    {data:"Custom_Q1"},
                    {data:"Custom_Q2"},
                    {data:"Custom_Q3"},
                    {data:"Custom_Q4"},
                    {data:"Definition_Calculation"},
                    {data:"Target_Rationale"},
                    {data:"Comparator_Source"},
                    {data:"Data_Source_MSH"},
                    {data:"Data_Source_Benchmark"},
                    {data:"OPEO_Lead"}
                ],
            });
        });

    });
</script>
</div>

<style>

    th {
    border-right:none !important;
    white-space: normal !important;
font-family: Calibri, Candara, Segoe, "Segoe UI", Optima, Arial, sans-serif;
font-weight:300;
font-size:medium!important;
}
    td {
            white-space: normal !important;
font-family: Calibri, Candara, Segoe, "Segoe UI", Optima, Arial, sans-serif;
font-weight:300;
font-size:medium!important;
    }
    label {
        color:lightgray;
    }

</style>